16 bit instructions
16 bit PC
8 bit daddr
8 bit ddata

direct decoding
stack?

registers: %a, %b, %fl{z,ov}, %pc

insn:
[x] jmp +imm
[x] jmp -imm
[x] hlt := jmp -1

[ ] ljmp %b:%a
[ ] jmp +%a
[ ] jmp -%a

[x] jz +imm
[x] jz -imm

[x] lda [imm] // [imm] -> a
[x] ldb [imm] // [imm] -> b

[x] imma imm // imm -> a
[x] immb imm // imm -> b

[x] sta [imm] // a -> [imm]
[x] stb [imm] // b -> [imm]

[x] add // a + b -> a
[x] sub // a - b -> a

TODO:

 - unify assembler & disassembler
 - add machine tests ++
 - hex nuber support in asm
